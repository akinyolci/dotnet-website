pipeline {
    agent any

    environment {
        AZURE_CREDENTIALS = credentials('azure-service-principal')
    }

    stages {
        stage('Install .NET SDK') {
            steps {
                sh 'wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh'
                sh 'chmod +x dotnet-install.sh'
                sh './dotnet-install.sh --channel 8.0'
                sh 'export PATH=$PATH:$HOME/.dotnet'
            }
        }

        stage('Install Azure CLI') {
            steps {
                sh '''
                if ! command -v az &> /dev/null
                then
                    curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
                fi
                '''
            }
        }

        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/akinyolci/dotnet-website.git'
            }
        }

        stage('Build') {
            steps {
                sh '$HOME/.dotnet/dotnet build --configuration Release'
            }
        }

        stage('Test') {
            steps {
                sh '$HOME/.dotnet/dotnet test --configuration Release'
            }
        }

        stage('Publish') {
            steps {
                sh '$HOME/.dotnet/dotnet publish --configuration Release --output ./publish'
            }
        }

        stage('Deploy to Azure') {
            steps {
                withCredentials([string(credentialsId: 'azure-service-principal-2', variable: 'AZURE_CREDENTIALS')]) {
                    script {
                        def json = new groovy.json.JsonSlurper().parseText(AZURE_CREDENTIALS)
                        sh """
                        az login --service-principal -u ${json.clientId} -p ${json.clientSecret} --tenant ${json.tenantId}
                        az webapp up --name dotnet-website --resource-group rg-deneme-eastus-01 --plan ASP-rgdenemeeastus01-8678 --location "UK West" --sku F1 --src-path ./publish
                        """
                    }
                }
            }
        }
    }
}